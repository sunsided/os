(function() {
    var type_impls = Object.fromEntries([["uefi_loader",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-Clone-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#429\">Source</a><a href=\"#impl-Debug-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#430\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-Default-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#435\">Source</a><a href=\"#impl-Display-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#436\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVirtualPage%3CS%3E%3E-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#678-680\">Source</a><a href=\"#impl-From%3CVirtualPage%3CS%3E%3E-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualPage.html\" title=\"struct kernel_vmem::addresses::VirtualPage\">VirtualPage</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"kernel_vmem/addresses/trait.PageSize.html\" title=\"trait kernel_vmem::addresses::PageSize\">PageSize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#682\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualPage.html\" title=\"struct kernel_vmem::addresses::VirtualPage\">VirtualPage</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VirtualPage<S>>","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#671\">Source</a><a href=\"#impl-From%3Cu64%3E-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#673\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-Hash-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-Ord-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1021-1023\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1060-1062\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1086-1088\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-PartialEq-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-PartialOrd-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#385\">Source</a><a href=\"#impl-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_nonnull\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#388\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.from_nonnull\" class=\"fn\">from_nonnull</a>&lt;T&gt;(ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section><section id=\"method.from_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#394\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.from_ptr\" class=\"fn\">from_ptr</a>&lt;T&gt;(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*const T</a>) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#400\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.new\" class=\"fn\">new</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h4></section><section id=\"method.as_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#406\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.as_u64\" class=\"fn\">as_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a></h4></section><section id=\"method.page\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#412\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.page\" class=\"fn\">page</a>&lt;S&gt;(self) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualPage.html\" title=\"struct kernel_vmem::addresses::VirtualPage\">VirtualPage</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"kernel_vmem/addresses/trait.PageSize.html\" title=\"trait kernel_vmem::addresses::PageSize\">PageSize</a>,</div></h4></section><section id=\"method.offset\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#418\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.offset\" class=\"fn\">offset</a>&lt;S&gt;(self) -&gt; <a class=\"struct\" href=\"kernel_vmem/addresses/struct.MemoryAddressOffset.html\" title=\"struct kernel_vmem::addresses::MemoryAddressOffset\">MemoryAddressOffset</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"kernel_vmem/addresses/trait.PageSize.html\" title=\"trait kernel_vmem::addresses::PageSize\">PageSize</a>,</div></h4></section><section id=\"method.split\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#424\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"kernel_vmem/addresses/struct.VirtualAddress.html#tymethod.split\" class=\"fn\">split</a>&lt;S&gt;(self) -&gt; (<a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualPage.html\" title=\"struct kernel_vmem::addresses::VirtualPage\">VirtualPage</a>&lt;S&gt;, <a class=\"struct\" href=\"kernel_vmem/addresses/struct.MemoryAddressOffset.html\" title=\"struct kernel_vmem::addresses::MemoryAddressOffset\">MemoryAddressOffset</a>&lt;S&gt;)<div class=\"where\">where\n    S: <a class=\"trait\" href=\"kernel_vmem/addresses/trait.PageSize.html\" title=\"trait kernel_vmem::addresses::PageSize\">PageSize</a>,</div></h4></section></div></details>",0,"uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<section id=\"impl-Copy-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-Copy-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section>","Copy","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<section id=\"impl-Eq-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-Eq-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section>","Eq","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"],["<section id=\"impl-StructuralPartialEq-for-VirtualAddress\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel_vmem/addresses.rs.html#382\">Source</a><a href=\"#impl-StructuralPartialEq-for-VirtualAddress\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"kernel_vmem/addresses/struct.VirtualAddress.html\" title=\"struct kernel_vmem::addresses::VirtualAddress\">VirtualAddress</a></h3></section>","StructuralPartialEq","uefi_loader::KernelVirtualAddress","uefi_loader::BootInfoVirtualAddress","uefi_loader::TrampolineStackVirtualAddress"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[34781]}